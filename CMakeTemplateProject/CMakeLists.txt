cmake_minimum_required (VERSION 3.7)

project (PathPlanner)

if(MSVC)
	set(SDL2_DIR "ext/SDL2-2.0.9")
endif(MSVC)

# Disable building extras we won't need (pure C++ project)
set(NANOGUI_BUILD_EXAMPLE OFF CACHE BOOL " " FORCE)
set(NANOGUI_BUILD_PYTHON  OFF CACHE BOOL " " FORCE)
set(NANOGUI_INSTALL       OFF CACHE BOOL " " FORCE)

# Add the configurations from nanogui
add_subdirectory(ext/nanogui)

# Various preprocessor definitions have been generated by NanoGUI
add_definitions(${NANOGUI_EXTRA_DEFS})

find_package(SDL2 REQUIRED)

include_directories(	
	include
    ext/nanogui/include
	${SDL2_INCLUDE_DIRS}
    ${NANOGUI_EXTRA_INCS}
)

if(MSVC)
	set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /Qpar /MP /O2 /DNDEBUG")
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS_RELEASE}")
else(MSVC)
	set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG")
	set(CMAKE_CXX_FLAGS "--std=gnu++11 ${CMAKE_CXX_FLAGS_RELEASE}")
endif(MSVC)

SET(HEADERFILES
	include/Map.h
	include/PathManager.h
	include/PointOfInterest.h
	include/Vehicle.h
	include/Window.h
)
    
SOURCE_GROUP("Header Files" FILES ${HEADERFILES})

SET(SOURCEFILES
	main.cpp
	include/Map.cpp
	include/PathManager.cpp
	include/PointOfInterest.cpp
	include/Vehicle.cpp
	include/Window.cpp
)

add_executable(PathPlanner
	${SOURCEFILES}
	${HEADERFILES}
)

target_link_libraries(
	PathPlanner
	${SDL2_LIBRARIES}
	nanogui
    ${NANOGUI_EXTRA_LIBS}
)

# For reliability of parallel build, make the NanoGUI targets dependencies
set_property(TARGET glfw glfw_objects nanogui PROPERTY FOLDER "dependencies")

